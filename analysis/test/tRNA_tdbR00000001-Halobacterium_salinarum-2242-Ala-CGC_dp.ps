%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.18
%%CreationDate: Thu Sep 29 19:09:36 2022
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (tRNA_tdbR00000001-Halobacterium_salinarum-2242-Ala-CGC)
} def

/sequence { (\
GGGCUCGUAGAUCAGCGGUAGAUCGCUUCCUUCGCAAGGAAGAGGCCCUGGGUUCAAAUCCCAGCGAGUCCACCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 71 0.998782549 ubox
1 73 0.009760231 ubox
1 74 0.016541922 ubox
2 70 0.999528237 ubox
2 71 0.024161108 ubox
2 73 0.015454018 ubox
3 69 0.999350814 ubox
3 70 0.024247919 ubox
4 68 0.999978244 ubox
5 67 0.999827668 ubox
6 17 0.006832035 ubox
6 66 0.999850471 ubox
7 13 0.007459172 ubox
7 16 0.019502941 ubox
7 23 0.003845856 ubox
7 26 0.008775014 ubox
7 46 0.003927974 ubox
7 65 0.987369735 ubox
8 14 0.003686035 ubox
8 15 0.019564230 ubox
8 20 0.005372488 ubox
8 22 0.007773606 ubox
8 25 0.015694380 ubox
8 45 0.004018295 ubox
8 63 0.007807330 ubox
8 64 0.608682949 ubox
9 19 0.005715995 ubox
9 53 0.004355473 ubox
9 54 0.015422229 ubox
9 59 0.003504208 ubox
10 16 0.021815233 ubox
10 23 0.003502774 ubox
10 24 0.974376796 ubox
10 28 0.003816379 ubox
10 29 0.048642753 ubox
10 33 0.004721514 ubox
10 46 0.003718596 ubox
10 47 0.003913935 ubox
10 48 0.003731214 ubox
10 53 0.014145488 ubox
10 54 0.011995471 ubox
10 55 0.012079184 ubox
10 60 0.046006279 ubox
10 61 0.004525870 ubox
10 62 0.014198575 ubox
11 19 0.029814173 ubox
11 23 0.975811021 ubox
11 28 0.047271765 ubox
11 32 0.004688896 ubox
11 53 0.013143573 ubox
11 54 0.011541445 ubox
11 59 0.045939817 ubox
12 18 0.030399045 ubox
12 21 0.004774664 ubox
12 22 0.976015808 ubox
12 43 0.005910410 ubox
12 45 0.004522431 ubox
12 51 0.042671447 ubox
12 52 0.011382780 ubox
12 58 0.036214560 ubox
13 17 0.029970410 ubox
13 18 0.012046457 ubox
13 21 0.975465876 ubox
13 42 0.006250169 ubox
13 44 0.005394427 ubox
13 50 0.071635437 ubox
13 51 0.008770349 ubox
14 19 0.238006245 ubox
14 23 0.004705544 ubox
14 27 0.123372729 ubox
14 28 0.003887992 ubox
14 49 0.083959398 ubox
14 54 0.017726112 ubox
15 19 0.051669944 ubox
15 23 0.003219004 ubox
15 24 0.005784073 ubox
15 26 0.140059566 ubox
15 35 0.008352967 ubox
15 46 0.010667145 ubox
15 48 0.091264500 ubox
15 49 0.003881305 ubox
15 53 0.018528375 ubox
15 55 0.005708366 ubox
16 21 0.029671886 ubox
16 25 0.144001124 ubox
16 34 0.008361796 ubox
16 45 0.010662829 ubox
16 52 0.018558439 ubox
17 24 0.144592691 ubox
17 33 0.008332230 ubox
17 47 0.133152065 ubox
17 48 0.033115545 ubox
17 49 0.004388000 ubox
18 23 0.098041281 ubox
18 24 0.014004645 ubox
18 32 0.007820937 ubox
18 46 0.133320154 ubox
18 47 0.032918476 ubox
18 48 0.005011199 ubox
19 45 0.127323842 ubox
19 50 0.017470863 ubox
20 31 0.005557457 ubox
20 49 0.019372268 ubox
21 29 0.006019910 ubox
21 30 0.005566746 ubox
21 46 0.030004341 ubox
21 47 0.022849677 ubox
21 48 0.020183988 ubox
22 28 0.006091536 ubox
23 43 0.013831723 ubox
23 44 0.006380527 ubox
23 45 0.061655514 ubox
24 42 0.011801310 ubox
24 44 0.109190513 ubox
24 45 0.012018668 ubox
25 35 0.003673117 ubox
25 46 0.916486704 ubox
25 47 0.044810416 ubox
25 48 0.010579543 ubox
26 34 0.003674358 ubox
26 42 0.364711979 ubox
26 44 0.015176842 ubox
26 45 0.919033261 ubox
27 41 0.371370554 ubox
27 42 0.004156046 ubox
27 43 0.014994075 ubox
27 44 0.916823984 ubox
27 45 0.007109911 ubox
28 40 0.384092119 ubox
28 41 0.006439026 ubox
28 42 0.007464958 ubox
28 43 0.910463339 ubox
28 44 0.021549620 ubox
28 45 0.052026396 ubox
29 39 0.385794083 ubox
29 42 0.746630451 ubox
29 44 0.069495973 ubox
29 45 0.024072856 ubox
30 38 0.386192349 ubox
30 39 0.030292546 ubox
30 42 0.538535704 ubox
30 44 0.024264556 ubox
30 45 0.035245184 ubox
31 36 0.009712700 ubox
31 37 0.381442011 ubox
31 38 0.030069601 ubox
31 39 0.004039663 ubox
31 40 0.521695812 ubox
31 41 0.748134000 ubox
31 43 0.020702961 ubox
31 44 0.035673287 ubox
32 36 0.317571121 ubox
32 37 0.026584675 ubox
32 38 0.003816844 ubox
32 39 0.527611389 ubox
32 40 0.752880565 ubox
32 41 0.004146704 ubox
32 42 0.014103515 ubox
32 43 0.037418256 ubox
33 38 0.528858919 ubox
33 39 0.752645001 ubox
33 42 0.038899572 ubox
34 46 0.003520563 ubox
35 39 0.009489749 ubox
35 45 0.003509445 ubox
37 49 0.006220390 ubox
38 47 0.009116402 ubox
38 48 0.007412843 ubox
39 46 0.009131252 ubox
39 47 0.007406794 ubox
41 49 0.009788252 ubox
42 46 0.005066723 ubox
42 47 0.014504320 ubox
42 48 0.012770350 ubox
42 55 0.007551149 ubox
43 49 0.021527394 ubox
43 54 0.007390815 ubox
44 48 0.024565581 ubox
44 53 0.006238738 ubox
44 54 0.010848876 ubox
44 55 0.004577126 ubox
44 61 0.003312697 ubox
44 62 0.003587131 ubox
44 65 0.007221433 ubox
45 53 0.014032073 ubox
45 54 0.003285502 ubox
45 60 0.003314554 ubox
45 61 0.003387611 ubox
45 65 0.027548266 ubox
46 51 0.004623148 ubox
46 52 0.015112923 ubox
46 64 0.025141351 ubox
46 66 0.004053385 ubox
47 51 0.015012554 ubox
47 64 0.036136633 ubox
47 66 0.011424949 ubox
48 64 0.780956671 ubox
49 56 0.005238044 ubox
49 63 0.966637739 ubox
50 55 0.005525048 ubox
50 61 0.049695925 ubox
50 62 0.995594902 ubox
51 60 0.053361257 ubox
51 61 0.995982833 ubox
51 62 0.037902339 ubox
52 59 0.053631815 ubox
52 60 0.994804925 ubox
52 61 0.038026654 ubox
53 57 0.020031786 ubox
53 58 0.128809943 ubox
54 58 0.151471447 ubox
1 71 0.9500000 lbox
2 70 0.9500000 lbox
3 69 0.9500000 lbox
4 68 0.9500000 lbox
5 67 0.9500000 lbox
6 66 0.9500000 lbox
7 65 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
13 21 0.9500000 lbox
25 46 0.9500000 lbox
26 45 0.9500000 lbox
27 44 0.9500000 lbox
28 43 0.9500000 lbox
29 42 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
33 39 0.9500000 lbox
48 64 0.9500000 lbox
49 63 0.9500000 lbox
50 62 0.9500000 lbox
51 61 0.9500000 lbox
52 60 0.9500000 lbox
showpage
end
%%EOF
